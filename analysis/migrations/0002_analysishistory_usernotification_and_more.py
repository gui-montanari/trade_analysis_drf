# Generated by Django 5.1.4 on 2024-12-09 00:47

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('analysis', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnalysisHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('success_rate', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('profit_loss', models.FloatField(blank=True, null=True)),
                ('max_drawdown', models.FloatField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Histórico de Análise',
                'verbose_name_plural': 'Histórico de Análises',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('signal', 'Sinal de Trading'), ('alert', 'Alerta'), ('risk', 'Risco'), ('system', 'Sistema')], max_length=10)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AlterField(
            model_name='analysis',
            name='confidence',
            field=models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AlterField(
            model_name='analysis',
            name='trend_strength',
            field=models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AlterField(
            model_name='tradingsignal',
            name='confidence',
            field=models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AlterField(
            model_name='usersettings',
            name='auto_update',
            field=models.BooleanField(default=True, help_text='Atualizar análises automaticamente'),
        ),
        migrations.AlterField(
            model_name='usersettings',
            name='max_position_size',
            field=models.FloatField(default=10.0, help_text='Tamanho máximo da posição (%)', validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(100.0)]),
        ),
        migrations.AlterField(
            model_name='usersettings',
            name='max_risk_per_trade',
            field=models.FloatField(default=2.0, help_text='Risco máximo por operação (%)', validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(10.0)]),
        ),
        migrations.AlterField(
            model_name='usersettings',
            name='notification_email',
            field=models.BooleanField(default=True, help_text='Receber notificações por email'),
        ),
        migrations.AlterField(
            model_name='usersettings',
            name='preferred_leverage',
            field=models.IntegerField(default=1, help_text='Alavancagem preferida', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)]),
        ),
        migrations.AlterField(
            model_name='usersettings',
            name='update_interval',
            field=models.IntegerField(default=60, help_text='Intervalo de atualização (segundos)', validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(3600)]),
        ),
        migrations.AddIndex(
            model_name='alert',
            index=models.Index(fields=['user', 'alert_type'], name='analysis_al_user_id_057d48_idx'),
        ),
        migrations.AddIndex(
            model_name='alert',
            index=models.Index(fields=['is_active', 'triggered'], name='analysis_al_is_acti_6d482f_idx'),
        ),
        migrations.AddIndex(
            model_name='analysis',
            index=models.Index(fields=['analysis_type', 'timestamp'], name='analysis_an_analysi_d3a5a5_idx'),
        ),
        migrations.AddIndex(
            model_name='tradingsignal',
            index=models.Index(fields=['signal_type', 'created_at'], name='analysis_tr_signal__116918_idx'),
        ),
        migrations.AddIndex(
            model_name='tradingsignal',
            index=models.Index(fields=['direction', 'is_active'], name='analysis_tr_directi_8a37c4_idx'),
        ),
        migrations.AddField(
            model_name='analysishistory',
            name='analysis',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analysis.analysis'),
        ),
        migrations.AddField(
            model_name='analysishistory',
            name='signal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analysis.tradingsignal'),
        ),
        migrations.AddField(
            model_name='usernotification',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='usernotification',
            index=models.Index(fields=['user', 'notification_type'], name='analysis_us_user_id_49bf18_idx'),
        ),
        migrations.AddIndex(
            model_name='usernotification',
            index=models.Index(fields=['read', 'created_at'], name='analysis_us_read_6025af_idx'),
        ),
    ]
